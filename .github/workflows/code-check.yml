name: code-check

on:
  push:
    branches: '*'
    tags: '*'
    paths-ignore: '**.md'

  pull_request:
    branches: '*'
    tags: '*'
    paths-ignore: '**.md'

jobs:
  code-check:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install poetry
        uses: snok/install-poetry@v1.3.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache venv
        id: code-check-cache
        uses: actions/cache@v3.0.3
        with:
          path: .venv
          key: code-check-python-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.code-check-cache.outputs.cache-hit != 'true'
        run: poetry install

      - name: Check code style
        run: poetry run poe check:style

      - name: Check lint
        run: poetry run poe check:lint

      - name: Check security issues
        run: poetry run poe check:security

      - name: Check for dead code
        run: poetry run poe check:deadcode

      - name: Check shell scripts
        run: |
          sudo apt-get install -y shellcheck
          shellcheck tests/test.sh
